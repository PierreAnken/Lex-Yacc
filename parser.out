Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expr
Rule 1     expr -> expr BAR expr
Rule 2     expr -> expr PLUS expr
Rule 3     expr -> expr MINUS expr
Rule 4     expr -> MINUS expr
Rule 5     expr -> expr TIMES expr
Rule 6     expr -> expr DIV expr
Rule 7     expr -> expr MODULO expr
Rule 8     expr -> expr POWER expr
Rule 9     expr -> POWER
Rule 10    expr -> NUMBER
Rule 11    expr -> FLOAT
Rule 12    expr -> LPAREN expr RPAREN
Rule 13    expr -> FUNCTION FUNCNAME LPAREN expr RPAREN
Rule 14    expr -> FUNCNAME LPAREN RPAREN

Terminals, with rules where they appear

BAR                  : 1
DIV                  : 6
FLOAT                : 11
FUNCNAME             : 13 14
FUNCTION             : 13
LPAREN               : 12 13 14
MINUS                : 3 4
MODULO               : 7
NUMBER               : 10
PLUS                 : 2
POWER                : 8 9
RPAREN               : 12 13 14
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expr                 : 1 1 2 2 3 3 4 5 5 6 6 7 7 8 8 12 13 0

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 1

state 1

    (0) S' -> expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15


state 2

    (4) expr -> MINUS . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 16

state 3

    (9) expr -> POWER .

    BAR             reduce using rule 9 (expr -> POWER .)
    PLUS            reduce using rule 9 (expr -> POWER .)
    MINUS           reduce using rule 9 (expr -> POWER .)
    TIMES           reduce using rule 9 (expr -> POWER .)
    DIV             reduce using rule 9 (expr -> POWER .)
    MODULO          reduce using rule 9 (expr -> POWER .)
    POWER           reduce using rule 9 (expr -> POWER .)
    $end            reduce using rule 9 (expr -> POWER .)
    RPAREN          reduce using rule 9 (expr -> POWER .)


state 4

    (10) expr -> NUMBER .

    BAR             reduce using rule 10 (expr -> NUMBER .)
    PLUS            reduce using rule 10 (expr -> NUMBER .)
    MINUS           reduce using rule 10 (expr -> NUMBER .)
    TIMES           reduce using rule 10 (expr -> NUMBER .)
    DIV             reduce using rule 10 (expr -> NUMBER .)
    MODULO          reduce using rule 10 (expr -> NUMBER .)
    POWER           reduce using rule 10 (expr -> NUMBER .)
    $end            reduce using rule 10 (expr -> NUMBER .)
    RPAREN          reduce using rule 10 (expr -> NUMBER .)


state 5

    (11) expr -> FLOAT .

    BAR             reduce using rule 11 (expr -> FLOAT .)
    PLUS            reduce using rule 11 (expr -> FLOAT .)
    MINUS           reduce using rule 11 (expr -> FLOAT .)
    TIMES           reduce using rule 11 (expr -> FLOAT .)
    DIV             reduce using rule 11 (expr -> FLOAT .)
    MODULO          reduce using rule 11 (expr -> FLOAT .)
    POWER           reduce using rule 11 (expr -> FLOAT .)
    $end            reduce using rule 11 (expr -> FLOAT .)
    RPAREN          reduce using rule 11 (expr -> FLOAT .)


state 6

    (12) expr -> LPAREN . expr RPAREN
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 17

state 7

    (13) expr -> FUNCTION . FUNCNAME LPAREN expr RPAREN

    FUNCNAME        shift and go to state 18


state 8

    (14) expr -> FUNCNAME . LPAREN RPAREN

    LPAREN          shift and go to state 19


state 9

    (1) expr -> expr BAR . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 20

state 10

    (2) expr -> expr PLUS . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 21

state 11

    (3) expr -> expr MINUS . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 22

state 12

    (5) expr -> expr TIMES . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 23

state 13

    (6) expr -> expr DIV . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 24

state 14

    (7) expr -> expr MODULO . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 25

state 15

    (8) expr -> expr POWER . expr
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 26

state 16

    (4) expr -> MINUS expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             reduce using rule 4 (expr -> MINUS expr .)
    PLUS            reduce using rule 4 (expr -> MINUS expr .)
    MINUS           reduce using rule 4 (expr -> MINUS expr .)
    TIMES           reduce using rule 4 (expr -> MINUS expr .)
    DIV             reduce using rule 4 (expr -> MINUS expr .)
    MODULO          reduce using rule 4 (expr -> MINUS expr .)
    POWER           reduce using rule 4 (expr -> MINUS expr .)
    $end            reduce using rule 4 (expr -> MINUS expr .)
    RPAREN          reduce using rule 4 (expr -> MINUS expr .)

  ! BAR             [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIV             [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 14 ]
  ! POWER           [ shift and go to state 15 ]


state 17

    (12) expr -> LPAREN expr . RPAREN
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    RPAREN          shift and go to state 27
    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15


state 18

    (13) expr -> FUNCTION FUNCNAME . LPAREN expr RPAREN

    LPAREN          shift and go to state 28


state 19

    (14) expr -> FUNCNAME LPAREN . RPAREN

    RPAREN          shift and go to state 29


state 20

    (1) expr -> expr BAR expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

  ! shift/reduce conflict for BAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 1 (expr -> expr BAR expr .)
    RPAREN          reduce using rule 1 (expr -> expr BAR expr .)
    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15

  ! BAR             [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! PLUS            [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! MINUS           [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! TIMES           [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! DIV             [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! MODULO          [ reduce using rule 1 (expr -> expr BAR expr .) ]
  ! POWER           [ reduce using rule 1 (expr -> expr BAR expr .) ]


state 21

    (2) expr -> expr PLUS expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             reduce using rule 2 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 2 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 2 (expr -> expr PLUS expr .)
    MODULO          reduce using rule 2 (expr -> expr PLUS expr .)
    POWER           reduce using rule 2 (expr -> expr PLUS expr .)
    $end            reduce using rule 2 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 2 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 12
    DIV             shift and go to state 13

  ! TIMES           [ reduce using rule 2 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 2 (expr -> expr PLUS expr .) ]
  ! BAR             [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! MODULO          [ shift and go to state 14 ]
  ! POWER           [ shift and go to state 15 ]


state 22

    (3) expr -> expr MINUS expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             reduce using rule 3 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 3 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 3 (expr -> expr MINUS expr .)
    MODULO          reduce using rule 3 (expr -> expr MINUS expr .)
    POWER           reduce using rule 3 (expr -> expr MINUS expr .)
    $end            reduce using rule 3 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 3 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 12
    DIV             shift and go to state 13

  ! TIMES           [ reduce using rule 3 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 3 (expr -> expr MINUS expr .) ]
  ! BAR             [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! MODULO          [ shift and go to state 14 ]
  ! POWER           [ shift and go to state 15 ]


state 23

    (5) expr -> expr TIMES expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             reduce using rule 5 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 5 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 5 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 5 (expr -> expr TIMES expr .)
    DIV             reduce using rule 5 (expr -> expr TIMES expr .)
    MODULO          reduce using rule 5 (expr -> expr TIMES expr .)
    POWER           reduce using rule 5 (expr -> expr TIMES expr .)
    $end            reduce using rule 5 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 5 (expr -> expr TIMES expr .)

  ! BAR             [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIV             [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 14 ]
  ! POWER           [ shift and go to state 15 ]


state 24

    (6) expr -> expr DIV expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    BAR             reduce using rule 6 (expr -> expr DIV expr .)
    PLUS            reduce using rule 6 (expr -> expr DIV expr .)
    MINUS           reduce using rule 6 (expr -> expr DIV expr .)
    TIMES           reduce using rule 6 (expr -> expr DIV expr .)
    DIV             reduce using rule 6 (expr -> expr DIV expr .)
    MODULO          reduce using rule 6 (expr -> expr DIV expr .)
    POWER           reduce using rule 6 (expr -> expr DIV expr .)
    $end            reduce using rule 6 (expr -> expr DIV expr .)
    RPAREN          reduce using rule 6 (expr -> expr DIV expr .)

  ! BAR             [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIV             [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 14 ]
  ! POWER           [ shift and go to state 15 ]


state 25

    (7) expr -> expr MODULO expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

  ! shift/reduce conflict for BAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 7 (expr -> expr MODULO expr .)
    RPAREN          reduce using rule 7 (expr -> expr MODULO expr .)
    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15

  ! BAR             [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! PLUS            [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! MINUS           [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! TIMES           [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! DIV             [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! MODULO          [ reduce using rule 7 (expr -> expr MODULO expr .) ]
  ! POWER           [ reduce using rule 7 (expr -> expr MODULO expr .) ]


state 26

    (8) expr -> expr POWER expr .
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

  ! shift/reduce conflict for BAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 8 (expr -> expr POWER expr .)
    RPAREN          reduce using rule 8 (expr -> expr POWER expr .)
    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15

  ! BAR             [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! PLUS            [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! MINUS           [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! TIMES           [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! DIV             [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! MODULO          [ reduce using rule 8 (expr -> expr POWER expr .) ]
  ! POWER           [ reduce using rule 8 (expr -> expr POWER expr .) ]


state 27

    (12) expr -> LPAREN expr RPAREN .

    BAR             reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    DIV             reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    MODULO          reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    POWER           reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 12 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 12 (expr -> LPAREN expr RPAREN .)


state 28

    (13) expr -> FUNCTION FUNCNAME LPAREN . expr RPAREN
    (1) expr -> . expr BAR expr
    (2) expr -> . expr PLUS expr
    (3) expr -> . expr MINUS expr
    (4) expr -> . MINUS expr
    (5) expr -> . expr TIMES expr
    (6) expr -> . expr DIV expr
    (7) expr -> . expr MODULO expr
    (8) expr -> . expr POWER expr
    (9) expr -> . POWER
    (10) expr -> . NUMBER
    (11) expr -> . FLOAT
    (12) expr -> . LPAREN expr RPAREN
    (13) expr -> . FUNCTION FUNCNAME LPAREN expr RPAREN
    (14) expr -> . FUNCNAME LPAREN RPAREN

    MINUS           shift and go to state 2
    POWER           shift and go to state 3
    NUMBER          shift and go to state 4
    FLOAT           shift and go to state 5
    LPAREN          shift and go to state 6
    FUNCTION        shift and go to state 7
    FUNCNAME        shift and go to state 8

    expr                           shift and go to state 30

state 29

    (14) expr -> FUNCNAME LPAREN RPAREN .

    BAR             reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    PLUS            reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    MINUS           reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    TIMES           reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    DIV             reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    MODULO          reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    POWER           reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    $end            reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)
    RPAREN          reduce using rule 14 (expr -> FUNCNAME LPAREN RPAREN .)


state 30

    (13) expr -> FUNCTION FUNCNAME LPAREN expr . RPAREN
    (1) expr -> expr . BAR expr
    (2) expr -> expr . PLUS expr
    (3) expr -> expr . MINUS expr
    (5) expr -> expr . TIMES expr
    (6) expr -> expr . DIV expr
    (7) expr -> expr . MODULO expr
    (8) expr -> expr . POWER expr

    RPAREN          shift and go to state 31
    BAR             shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIV             shift and go to state 13
    MODULO          shift and go to state 14
    POWER           shift and go to state 15


state 31

    (13) expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .

    BAR             reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    PLUS            reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    MINUS           reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    TIMES           reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    DIV             reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    MODULO          reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    POWER           reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    $end            reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)
    RPAREN          reduce using rule 13 (expr -> FUNCTION FUNCNAME LPAREN expr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BAR in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 20 resolved as shift
WARNING: shift/reduce conflict for DIV in state 20 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 20 resolved as shift
WARNING: shift/reduce conflict for POWER in state 20 resolved as shift
WARNING: shift/reduce conflict for BAR in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIV in state 25 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 25 resolved as shift
WARNING: shift/reduce conflict for POWER in state 25 resolved as shift
WARNING: shift/reduce conflict for BAR in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 26 resolved as shift
WARNING: shift/reduce conflict for DIV in state 26 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 26 resolved as shift
WARNING: shift/reduce conflict for POWER in state 26 resolved as shift
